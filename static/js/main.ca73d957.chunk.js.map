{"version":3,"sources":["assets/logo.PNG","components/PaymentAdvice.jsx","contexts/formContext.js","utils/dateUtils.js","components/Form.jsx","assets/github-icon.svg","components/Print.jsx","reducers/formReducer.js","App.js","reportWebVitals.js","index.js"],"names":["PaymentAdvice","forwardRef","period","formData","useState","salary","setSalary","commision","setComision","bouns","setBouns","totalAmount","className","src","logo","alt","width","htmlFor","type","id","defaultValue","staffName","position","paymentMethod","value","onChange","event","parseInt","target","isNaN","employer","phonenNumber","formContext","createContext","monthFieldParser","date","split","year","month","Date","Form","moment","format","startDate","setStartDate","endDate","setEndDate","form","setForm","formDispatch","useContext","textHandler","name","trim","numberHandler","onSubmit","preventDefault","diff","start","end","months","getFullYear","getMonth","monthDiff","periodsOfMonth","monthNum","result","i","startMonth","setMonth","push","getPeriods","payload","periods","max","min","placeholder","Print","formDatas","paymentAdviceRef","useRef","handlePrint","useReactToPrint","content","current","style","gap","onClick","ref","map","item","href","rel","github_icon","title","initialFormState","formReducer","state","action","Error","App","useReducer","formValue","useMemo","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca73d957.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.cdd09392.PNG\";","import React, { forwardRef, useState } from 'react'\r\nimport logo from \"../assets/logo.PNG\";\r\n\r\nconst PaymentAdvice = forwardRef(({ period, formData }) => {\r\n    const [salary, setSalary] = useState(formData.salary);\r\n    const [commision, setComision] = useState(formData.commision);\r\n    const [bouns, setBouns] = useState(formData.bouns);\r\n    const totalAmount = salary + commision + bouns;\r\n\r\n    return (\r\n        <div className=\"min-h-screen flex flex-col\">\r\n            <div className=\"flex-grow\" >\r\n                <section className=\"mb-10\">\r\n                    <div className=\"\">\r\n                        <img src={logo} alt=\"logo\" width={150} />\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"mb-3\">\r\n                    <div className=\"text-lg\">\r\n                        <div className=\"grid grid-cols-7 mb-5\">\r\n                            <label className=\"font-medium text-lg\" htmlFor=\"staff-name\">僱員姓名: </label>\r\n                            <input type=\"text\" className=\"col-span-3 text-center border-b border-gray-200 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\" id=\"staff-name\" defaultValue={formData.staffName} />\r\n                        </div>\r\n                        <div className=\"grid grid-cols-7 mb-5\">\r\n                            <label className=\"font-medium text-lg\" htmlFor=\"position\">職位:</label>\r\n                            <input type=\"text\" className=\"col-span-3 text-center border-b border-gray-200 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\" id=\"position\" defaultValue={formData.position} />\r\n                        </div>\r\n                        <div className=\"grid grid-cols-7 mb-5\">\r\n                            <label className=\"font-medium text-lg\" htmlFor=\"period\">糧期:</label>\r\n                            <input type=\"text\" className=\"col-span-3 text-center border-b border-gray-200 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\" id=\"period\" defaultValue={period} />\r\n                        </div>\r\n                        <div className=\"grid grid-cols-7 mb-5\">\r\n                            <label className=\"font-medium text-lg\" htmlFor=\"paymentMethod\">付款方式:</label>\r\n                            <input type=\"text\" className=\"col-span-3 text-center border-b border-gray-200 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\" id=\"paymentMethod\" defaultValue={formData.paymentMethod} />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                <section >\r\n                    <div className=\"mb-2\">\r\n                        <div className=\"font-medium text-xl border-b border-black px-3 py-2\">薪資細明表</div>\r\n                    </div>\r\n                    <div className=\"text-lg\">\r\n                        <div className=\"mb-4 flex justify-end\">\r\n                            <label className=\"font-medium\">金額(HK$)</label>\r\n                        </div>\r\n                        <div className=\"mb-4 grid grid-cols-12\">\r\n                            <label className=\"font-medium col-span-3\" htmlFor=\"base-salary\">a. 底薪</label>\r\n                            <input type=\"number\" className=\"col-start-11 col-span-2 text-right border-b border-gray-200 text-xl focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\" id=\"base-salary\" value={salary} onChange={(event) => setSalary(parseInt(event.target.value))} />\r\n                        </div>\r\n                        <div className=\"mb-4 grid grid-cols-12\">\r\n                            <label className=\"font-medium col-span-3\" htmlFor=\"commission\">b. 佣金</label>\r\n                            <input type=\"number\" className=\"col-start-11 col-span-2 text-right border-b border-gray-200 text-xl focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\" id=\"commission\" value={commision} onChange={(event) => setComision(parseInt(event.target.value))} />\r\n                        </div>\r\n                        <div className=\"mb-4 grid grid-cols-12\">\r\n                            <label className=\"font-medium col-span-3\" htmlFor=\"bouns\">c. 雙糧/花紅</label>\r\n                            <input type=\"number\" className=\"col-start-11 col-span-2 text-right border-b border-gray-200 text-xl focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\" id=\"bouns\" value={bouns} onChange={(event) => setBouns(parseInt(event.target.value))} />\r\n                        </div>\r\n                        <div className=\"mb-4 grid grid-cols-12\">\r\n                            <label className=\"font-medium col-span-3\">總薪金</label>\r\n                            <div className=\"col-start-10 col-span-3 border-b border-gray-200 text-xl flex justify-between focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\" id=\"total-amount\">HK$<span className=\"pr-4\">{isNaN(totalAmount) === false && totalAmount}</span></div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"mb-14\">\r\n                    <div className=\"mb-7\">\r\n                        <div className=\"font-medium text-xl border-b border-black px-3 py-2\">備注</div>\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <span className=\"font-medium text-lg\">1. 如有何疑問, 可向人事部查詢</span>\r\n                    </div>\r\n                </section>\r\n\r\n                <section>\r\n                    <div className=\"font-medium\">\r\n                        <div className=\"grid grid-cols-11 mb-10\">\r\n                            <label className=\"col-span-2 text-lg\" htmlFor=\"employer-signature\">僱主簽名:</label>\r\n                            <input type=\"text\" className=\"col-span-3 text-center border-b border-gray-200 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\" id=\"employer-signature\" />\r\n                            <label className=\"col-start-7 col-span-2 text-lg\" htmlFor=\"employer-name\">僱主姓名:</label>\r\n                            <input type=\"text\" className=\"col-span-3 text-center border-b border-gray-200 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\" id=\"employer-name\" defaultValue={formData.employer} />\r\n                        </div>\r\n                        <div className=\"grid grid-cols-11\">\r\n                            <label className=\"col-span-2 text-lg\" htmlFor=\"stamp\">公司蓋章:</label>\r\n                            <input type=\"text\" className=\"col-span-3 text-center border-b border-gray-200 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\" id=\"stamp\" />\r\n                            <label className=\"col-start-7 col-span-2 text-lg\" htmlFor=\"contact-number\">聯絡電話:</label>\r\n                            <input type=\"text\" className=\"col-span-3 text-center border-b border-gray-200 focus:ring-2 focus:ring-purple-600 focus:border-transparent\" id=\"contact-number\" defaultValue={formData.phonenNumber} />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n\r\n            <footer className=\"mx-5\">\r\n                <div className=\"font-medium text-base\">\r\n                    地址: 香港九龍深水埗大南西街永義廣場12C室\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default PaymentAdvice\r\n","import { createContext, useContext } from \"react\";\r\n\r\nconst formContext = createContext(null);\r\nconst useFormContext = () => useContext(formContext);\r\n\r\nexport { useFormContext, formContext };","import moment from 'moment';\r\n\r\n// date argument should be like YYYY-MM eg. 20201-09 \r\nexport const monthFieldParser = (date) => {\r\n    if (typeof (date) === \"string\") {\r\n        const [year, month] = date.split(\"-\");\r\n        return new Date(year, month - 1);\r\n    }\r\n}\r\n\r\nexport const monthDiff = (start, end) => {\r\n    let months = (end.getFullYear() - start.getFullYear()) * 12;\r\n    months -= start.getMonth();\r\n    months += end.getMonth();\r\n    return months <= 0 ? 0 : months;\r\n}\r\n\r\nexport const getPeriods = (start, monthNum) => {\r\n    let result = [];\r\n    for (let i = 0; i < monthNum; i++) {\r\n        let startMonth = new Date(start);\r\n        let date = new Date(startMonth.setMonth(start.getMonth() + i));\r\n        result.push(moment(date).format(\"YYYY-MM\"));\r\n    }\r\n    return result;\r\n}","import React, { useState, useContext } from 'react'\r\nimport moment from 'moment';\r\nimport { formContext } from '../contexts/formContext';\r\nimport { monthFieldParser, monthDiff, getPeriods } from '../utils/dateUtils';\r\nexport default function Form() {\r\n    const [startDate, setStartDate] = useState(moment(new Date()).format(\"YYYY-MM\"));\r\n    const [endDate, setEndDate] = useState(moment(new Date()).format(\"YYYY-MM\"));\r\n    const [form, setForm] = useState({\r\n        staffName: \"\",\r\n        position: \"\",\r\n        paymentMethod: \"\",\r\n        salary: 0,\r\n        bouns: 0,\r\n        commision: 0,\r\n        employer: \"\",\r\n        phonenNumber: \"\"\r\n    });\r\n    const { formDispatch } = useContext(formContext);\r\n\r\n    const textHandler = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        if (value.trim()) setForm({ ...form, [name]: value.trim() });\r\n    }\r\n\r\n    const numberHandler = (event) => {\r\n        const name = event.target.name;\r\n        const value = parseInt(event.target.value);\r\n        if (isNaN(value) === false) setForm({ ...form, [name]: value });\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        let diff = monthDiff(monthFieldParser(startDate), monthFieldParser(endDate))\r\n        let periodsOfMonth = getPeriods(monthFieldParser(startDate), diff + 1);\r\n        formDispatch({ type: \"UPDATE_FORM\", payload: { periods: periodsOfMonth, form: form } })\r\n    }\r\n\r\n    return (\r\n        <fieldset className=\"border-2 rounded-lg shadow-2xl border-gray-200 p-3 bg-white\">\r\n            <legend className=\"font-bold text-xl text-purple-900\">Generation Form</legend>\r\n            <form className=\"p-3\" onSubmit={submitHandler}>\r\n                <div className=\"grid grid-cols-9 mb-2\">\r\n                    <label className=\"col-span-4 lg:col-span-1\" htmlFor=\"start\">Start Month</label>\r\n                    <input className=\"col-span-5 lg:col-span-3 border border-transparent border-purple-300 rounded-md shadow-md focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent px-3 py-2\" type=\"month\" id=\"start\" name=\"start\" max={endDate} value={startDate} onChange={(event) => setStartDate(event.target.value)} />\r\n                    <label className=\"lg:col-start-6 col-span-4 lg:col-span-1\" htmlFor=\"end\">End Month</label>\r\n                    <input className=\"col-span-5 lg:col-span-3 border border-transparent  border-purple-300 rounded-md shadow-md focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent px-3 py-2\" type=\"month\" id=\"end\" name=\"end\" min={startDate} value={endDate} onChange={(event) => setEndDate(event.target.value)} />\r\n                </div>\r\n                <div className=\"flex flex-col\">\r\n                    <input className=\"border border-transparent border-purple-300 rounded-md shadow-md focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent mb-2 px-3 py-2\" type=\"text\" name=\"staffName\" id=\"\" placeholder=\"Staff\" onChange={textHandler} />\r\n                    <input className=\"border border-transparent border-purple-300 rounded-md shadow-md focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent mb-2 px-3 py-2\" type=\"text\" name=\"position\" id=\"\" placeholder=\"Position\" onChange={textHandler} />\r\n                    <input className=\"border border-transparent border-purple-300 rounded-md shadow-md focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent mb-2 px-3 py-2\" type=\"text\" name=\"paymentMethod\" id=\"\" placeholder=\"Payment Method\" onChange={textHandler} />\r\n                    <input className=\"border border-transparent border-purple-300 rounded-md shadow-md focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent mb-2 px-3 py-2\" type=\"number\" name=\"salary\" id=\"\" placeholder=\"Salary\" onChange={numberHandler} />\r\n                    <input className=\"border border-transparent border-purple-300 rounded-md shadow-md focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent mb-2 px-3 py-2\" type=\"number\" name=\"bouns\" id=\"\" placeholder=\"Bouns\" onChange={numberHandler} />\r\n                    <input className=\"border border-transparent border-purple-300 rounded-md shadow-md focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent mb-2 px-3 py-2\" type=\"number\" name=\"commision\" id=\"\" placeholder=\"Comision\" onChange={numberHandler} />\r\n                    <input className=\"border border-transparent border-purple-300 rounded-md shadow-md focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent mb-2 px-3 py-2\" type=\"text\" name=\"employer\" id=\"\" placeholder=\"Employer\" onChange={textHandler} />\r\n                    <input className=\"border border-transparent border-purple-300 rounded-md shadow-md focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent mb-2 px-3 py-2\" type=\"text\" name=\"phonenNumber\" id=\"\" placeholder=\"Phone Number\" onChange={textHandler} />\r\n                    <button type=\"submit\" className=\"py-2 px-4 bg-red-400 hover:bg-red-500\">Generate</button>\r\n                </div>\r\n            </form>\r\n\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/github-icon.04ed74f3.svg\";","import React, { useRef, useContext } from 'react'\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport PaymentAdvice from './PaymentAdvice';\r\nimport Form from './Form';\r\nimport github_icon from \"../assets/github-icon.svg\";\r\nimport { formContext } from '../contexts/formContext';\r\n\r\nexport default function Print() {\r\n    const { form: formDatas } = useContext(formContext);\r\n    const paymentAdviceRef = useRef();\r\n\r\n    const handlePrint = useReactToPrint({\r\n        content: () => paymentAdviceRef.current\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <header className=\"bg-purple-600 py-4\">\r\n                <div className=\"lg:container lg:mx-auto px-4 lg:px-0 flex justify-between flex-wrap\" style={{ gap: 10 }}>\r\n                    <div className=\"font-bold text-4xl text-white\">Payment Advice Generator</div>\r\n                    <button type=\"button\" className=\"bg-red-500 hover:bg-red-700 shadow-xl px-5 py-2 rounded-lg text-xl font-xl text-white\" onClick={handlePrint}>PRINT</button>\r\n                </div>\r\n            </header>\r\n            <section className=\"py-4 bg-purple-200\">\r\n                <div className=\"lg:container lg:mx-auto sm:px-1 md:px-4 lg:px-20 xl:px-40\">\r\n                    <div className=\"mb-3\">\r\n                        <Form />\r\n                    </div>\r\n                    <div className=\"border-4 rounded-lg shadow-2xl bg-white py-2\">\r\n                        <div ref={paymentAdviceRef}>\r\n                            {formDatas.periods.map((item) => {\r\n                                return (\r\n                                    <div key={item}>\r\n                                        <div className=\"page-break\" />\r\n                                        <PaymentAdvice period={item} formData={formDatas.form} />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <footer className=\"bg-purple-600 py-7 flex justify-center\">\r\n                <a href=\"https://github.com/michaelc285/payment-advice-generator\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <img className=\"github-icon\" src={github_icon} width={25} title={\"GitHub Repository\"} alt={\"github icon\"} />\r\n                </a>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n","export const initialFormState = {\r\n    periods: [],\r\n    form: {\r\n        staffName: \"\",\r\n        position: \"\",\r\n        paymentMethod: \"\",\r\n        salary: 0,\r\n        bouns: 0,\r\n        commision: 0,\r\n        employer: \"\",\r\n        phonenNumber: \"\"\r\n    }\r\n};\r\n\r\nexport const formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'UPDATE_FORM':\r\n            return { ...action.payload };\r\n        default:\r\n            throw new Error();\r\n    }\r\n}","import Form from './components/Print.jsx';\nimport { useReducer, useMemo } from \"react\";\nimport { formReducer, initialFormState } from \"./reducers/formReducer\";\nimport { formContext } from \"./contexts/formContext\";\nimport \"./App.css\"\nfunction App() {\n  const [form, formDispatch] = useReducer(formReducer, initialFormState);\n  const formValue = useMemo(() => ({ form, formDispatch }), [form, formDispatch]);\n\n  return (\n    <formContext.Provider value={formValue}>\n      <div>\n        <Form />\n      </div>\n    </formContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}